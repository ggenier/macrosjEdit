/*Lock un fichier provenant d'un des serveurs*/
import java.io.*;
boolean gp_enregistrer_sous;

boolean lockerFichierFtp(String p_chemin_ftp_complet,
                         String p_chemin_fichier_sans_nom_fichier,
                         String p_nom_fichier){

   String fichierSwp = p_chemin_fichier_sans_nom_fichier+"."+p_nom_fichier+".swp";
   //String nom_fichier_swap = "."+p_nom_fichier+".swp";
   String nom_fichier_swap = "\\."+p_nom_fichier+"\\.sw.";
   boolean est_lecture_seule = view.getBuffer().isReadOnly();

   if (est_lecture_seule){
      return false;
   }

   if((ftplock.fichier_existe(p_chemin_ftp_complet, p_chemin_fichier_sans_nom_fichier, p_nom_fichier)||gp_enregistrer_sous) &&
      !ftplock.fichier_existe(p_chemin_ftp_complet, p_chemin_fichier_sans_nom_fichier, nom_fichier_swap)){
      ftplock.stocker_fichier(p_chemin_ftp_complet, fichierSwp);
      //Macros.message(view, "lock");
      Log.log(Log.DEBUG,this,"File locked");
      return true;
   }else{
      Log.log(Log.DEBUG,this,"File not locked");
      return false;
   }
}

boolean unlockerFichierFtp(ftplock p_ftplock, String p_chemin_ftp_complet,
                           String p_chemin_fichier_sans_nom_fichier,
                           String p_nom_fichier){

   String fichierSwp = p_chemin_fichier_sans_nom_fichier+"."+p_nom_fichier+".swp";
   //String nom_fichier_swap = "."+p_nom_fichier+".swp";
   String nom_fichier_swap = "\\."+p_nom_fichier+"\\.sw.";

   //Macros.message(view, "p_chemin_fichier_sans_nom_fichier : "+p_chemin_fichier_sans_nom_fichier);
   //Macros.message(view, "nom_fichier_swap : "+nom_fichier_swap);
   Log.log(Log.DEBUG,this,"File searched "+nom_fichier_swap);
   if(p_ftplock.fichier_existe(p_chemin_ftp_complet, p_chemin_fichier_sans_nom_fichier, nom_fichier_swap)){
      //Macros.message(view, "Ici");
      p_ftplock.supprimer_fichier(fichierSwp);
      return true;
   }
   return false;
}

try{

   String chemin_ftp_complet = view.getBuffer().getPath();
   if(ftplock.est_fichier_ftp(chemin_ftp_complet)){
      boolean est_lecture_seule = view.getBuffer().isReadOnly();
      if(!chemin_ftp_complet.contains("/valid/")){
         est_lecture_seule=false;
      }
      boolean est_untitled = view.getBuffer().isUntitled();
      gp_enregistrer_sous = false;
      if(!est_untitled){
         ftplock.decouper_chemin_ftp(chemin_ftp_complet);
         String type_serveur = ftplock.type_serveur();
         chemin_fichier_avec_nom_fichier = ftplock.chemin_fichier();
         chemin_fichier_sans_nom_fichier = ftplock.chemin_sans_nom_fichier();
         nom_fichier = MiscUtilities.getFileName(chemin_fichier_avec_nom_fichier);
         String droit_fichier = jEdit.getProperty(chemin_ftp_complet);
         String nom_fichier_en_cours = jEdit.getProperty("fichier_cours_sauvegarde2");

         //Macros.message(view, "chemin_ftp_complet : "+chemin_ftp_complet);
         //Macros.message(view, "type_serveur : "+type_serveur);
         //Macros.message(view, "chemin_fichier_avec_nom_fichier : "+chemin_fichier_avec_nom_fichier);
         //Macros.message(view, "chemin_fichier_sans_nom_fichier : "+chemin_fichier_sans_nom_fichier);
         //Macros.message(view, "nom_fichier : "+nom_fichier);
         //Macros.message(view, "droit_fichier : "+droit_fichier);
         //Macros.message(view, "nom_fichier_en_cours : "+nom_fichier_en_cours);

         //Cas du enregistrer sous
         if(nom_fichier_en_cours != null &&
            nom_fichier_en_cours.length()>0){
            //Macros.message(view, "TOTO1");
            if(!nom_fichier_en_cours.equals(chemin_ftp_complet) &&
               !nom_fichier_en_cours.contains("/valid/")){
               //Macros.message(view, "TOTO2");
               //On supprime l'ancien verrou avant
               ftplock ftplock_ancien_fichier = new ftplock();
               ftplock_ancien_fichier.decouper_chemin_ftp(nom_fichier_en_cours);
               String droit_fichier_ancien_fichier = jEdit.getProperty(nom_fichier_en_cours);
               //Macros.message(view, "droit_fichier_ancien_fichier : "+droit_fichier_ancien_fichier);
               if(droit_fichier_ancien_fichier!=null &&
                  droit_fichier_ancien_fichier.length()>0 &&
                  droit_fichier_ancien_fichier.equals("rw")){
                  //ftplock_ancien_fichier.connection_serveur(view, nom_fichier_en_cours);
                  //Macros.message(view, "TOTO3");
                  if(unlockerFichierFtp(ftplock_ancien_fichier,
                                        nom_fichier_en_cours,
                                        ftplock_ancien_fichier.chemin_sans_nom_fichier(),
                                        MiscUtilities.getFileName(ftplock_ancien_fichier.chemin_fichier())
                     )){
                  }
                  jEdit.unsetProperty(nom_fichier_en_cours);
                  gp_enregistrer_sous = true;
               }
            }

            if(nom_fichier_en_cours.contains("/valid/") && !chemin_ftp_complet.contains("/valid/")){
               gp_enregistrer_sous=true;
            }
         }

         if(type_serveur.equals("ftp")||type_serveur.equals("sftp")){
            if(droit_fichier == null || droit_fichier.length() == 0){
               if(!est_lecture_seule && !chemin_fichier_sans_nom_fichier.contains("/valid/")){
                  //ftplock.connection_serveur(view, chemin_ftp_complet);
                  if(!lockerFichierFtp(chemin_ftp_complet,
                                       chemin_fichier_sans_nom_fichier,
                                       nom_fichier
                     )){
                        if(!est_lecture_seule){
                           buffer.setReadOnly(true);
                           if(buffer.isLoaded() /*&& !buffer.isPerformingIO()*/){
                              VFSManager.waitForRequests();
                              //GG TEST buffer.reload(view);
                              //VFSManager.waitForRequests();
                              //view.repaint();
                           }
                        }
                        jEdit.unsetProperty(chemin_ftp_complet);
                     }else{
                        if(gp_enregistrer_sous){
                           buffer.setReadOnly(false);
                           VFSManager.waitForRequests();
                           //GG TEST buffer.reload(view);
                        }
                        jEdit.setProperty(chemin_ftp_complet, "rw");
                        //jEdit.unsetProperty("fichier_cours_sauvegarde2");
                     }
               }else{
                  if(!est_lecture_seule){
                     buffer.setReadOnly(true);
                     if(buffer.isLoaded() /* && !buffer.isPerformingIO()*/){
                        VFSManager.waitForRequests();
                        //GG TEST buffer.reload(view);
                        //VFSManager.waitForRequests();
                        //view.repaint();
                     }
                  }
                  jEdit.unsetProperty(chemin_ftp_complet);
               }
            }else {
               if(!droit_fichier.equals("rw")){
                  if(!est_lecture_seule){
                     buffer.setReadOnly(true);
                     if(buffer.isLoaded() /* && !buffer.isPerformingIO()*/){
                        VFSManager.waitForRequests();
                        //GG TEST buffer.reload(view);
                        //VFSManager.waitForRequests();
                        //view.repaint();
                     }
                  }
                  jEdit.unsetProperty(chemin_ftp_complet);
               }
            }
         }
      }
      try{
         //ftplock.deconnection_server(chemin_ftp_complet);
      }catch(Exception e){
         Log.log(Log.DEBUG,this,"Lock_a_file_ftp : Erreur lors dela déconnection :\n"+e.toString());
      }
   }
} catch(Exception e) {
   Macros.message(view, "Lock_a_file_ftp : "+e.getMessage());
}

jEdit.propertiesChanged();
jEdit.saveSettings();
System.gc ();